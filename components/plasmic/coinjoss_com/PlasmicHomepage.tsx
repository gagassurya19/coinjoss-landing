// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sMfv1hg7t9bpqK5N2h2Xpc
// Component: X2eTwNfEQNyM
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent
import Button from "../../Button"; // plasmic-import: B2AzBChSZBa/component

import { useScreenVariants as useScreenVariantsoR09Sl7PmsYzr } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: oR09Sl7pmsYZR/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_coinjoss_com.module.css"; // plasmic-import: sMfv1hg7t9bpqK5N2h2Xpc/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: X2eTwNfEQNyM/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: C1r0wy0DtJv/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: xD4MiLWeXK-/icon
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: vI1V6MDOzo/icon
import FacebookSvgrepoComsvgIcon from "./icons/PlasmicIcon__FacebookSvgrepoComsvg"; // plasmic-import: a9385cNnDv/icon
import InstagramSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__InstagramSvgrepoCom1Svg"; // plasmic-import: RpEl5pb15K/icon
import TwitterSvgrepoComsvgIcon from "./icons/PlasmicIcon__TwitterSvgrepoComsvg"; // plasmic-import: W3lydZRry9/icon
import MediumCircleSvgrepoComsvgIcon from "./icons/PlasmicIcon__MediumCircleSvgrepoComsvg"; // plasmic-import: LteOjVPvvt/icon
import LinkedinSvgrepoComsvgIcon from "./icons/PlasmicIcon__LinkedinSvgrepoComsvg"; // plasmic-import: -JrcytDXSf/icon
import DiscordSvgrepoComsvgIcon from "./icons/PlasmicIcon__DiscordSvgrepoComsvg"; // plasmic-import: shO8z3gKYM/icon
import TelegramSvgrepoCom2SvgIcon from "./icons/PlasmicIcon__TelegramSvgrepoCom2Svg"; // plasmic-import: GUGaE4NCXF/icon

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<"div">;
  navigationBar?: p.Flex<typeof NavigationBar>;
  hero?: p.Flex<"section">;
  row?: p.Flex<"div">;
  h6?: p.Flex<"h6">;
  exchange?: p.Flex<"section">;
  row2?: p.Flex<"div">;
  staking?: p.Flex<"section">;
  row3?: p.Flex<"div">;
  custodian?: p.Flex<"section">;
  row4?: p.Flex<"div">;
  cta?: p.Flex<"section">;
  row6?: p.Flex<"div">;
  h3?: p.Flex<"h3">;
  partner?: p.Flex<"section">;
  row5?: p.Flex<"div">;
  footer?: p.Flex<"section">;
  row7?: p.Flex<"div">;
  socmedWrapper?: p.Flex<"div">;
  socmed?: p.Flex<"a"> & Partial<LinkProps>;
  socmed2?: p.Flex<"a"> & Partial<LinkProps>;
  socmed3?: p.Flex<"a"> & Partial<LinkProps>;
  socmed4?: p.Flex<"a"> & Partial<LinkProps>;
  socmed5?: p.Flex<"a"> & Partial<LinkProps>;
  socmed6?: p.Flex<"a"> & Partial<LinkProps>;
  socmed7?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsoR09Sl7PmsYzr()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames(projectcss.all, sty.navbar)}
          >
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__rsQ22
                  )}
                  component={Link}
                  href={"#" as const}
                  platform={"nextjs"}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cP1Vy)}
                    displayHeight={"32px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/logo1Coinjosspng.png",
                      fullWidth: 1095,
                      fullHeight: 174,
                      aspectRatio: undefined
                    }}
                  />
                </p.PlasmicLink>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__htM16)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/close.svg" as const}
                />
              }
              forceOpenMenu={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? false
                  : false
              }
              itemsGap={24 as const}
              menuItems={
                <React.Fragment>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__cjGAr
                    )}
                    component={Link}
                    href={"#services" as const}
                    platform={"nextjs"}
                  >
                    {"Services"}
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__fQrf5
                    )}
                    component={Link}
                    href={"https://coinjoss.com/company" as const}
                    platform={"nextjs"}
                  >
                    {"About Us"}
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___3V16S
                    )}
                    component={Link}
                    href={"https://coinjoss.com/faq" as const}
                    platform={"nextjs"}
                  >
                    {"FAQ"}
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__dCAvq
                    )}
                    component={Link}
                    href={"https://coinjoss.com/contact-us" as const}
                    platform={"nextjs"}
                  >
                    {"Contact"}
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__trHdF
                    )}
                    component={Link}
                    href={"https://platform.coinjoss.com/login" as const}
                    platform={"nextjs"}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__suLCd
                      )}
                      color={"softBlue" as const}
                    >
                      {"Login"}
                    </Button>
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ih5Cr
                    )}
                    component={Link}
                    href={"https://platform.coinjoss.com/register" as const}
                    platform={"nextjs"}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__alpy1
                      )}
                      color={"blue" as const}
                    >
                      {"Register"}
                    </Button>
                  </p.PlasmicLink>
                </React.Fragment>
              }
              openButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__p9Kwo)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/menu.svg" as const}
                />
              }
              responsiveBreakpoint={768 as const}
            />
          </div>

          <p.Stack
            as={"section"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div
              data-plasmic-name={"row"}
              data-plasmic-override={overrides.row}
              className={classNames(projectcss.all, sty.row)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__echCr)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__loUtS)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__zoFek
                    )}
                  >
                    {
                      "Buy, Sell and Trade your cryptocurrency safely and comfortably."
                    }
                  </h1>

                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__mj5E3
                    )}
                  >
                    {
                      "With its quick trade platform, Coinjoss will provide you with a seamless experience in managing your cryptocurrencies"
                    }
                  </p>

                  <Button
                    className={classNames("__wab_instance", sty.button__uBcD5)}
                    color={"blue" as const}
                    showEndIcon={true}
                    startIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__cArez)}
                        role={"img"}
                      />
                    }
                  >
                    {"Learn More"}
                  </Button>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__c6Cvl)}
                  >
                    <h6
                      data-plasmic-name={"h6"}
                      data-plasmic-override={overrides.h6}
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6
                      )}
                    >
                      {"Supervised and registered by :"}
                    </h6>

                    {true ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__c51RZ
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__usCo)}
                          displayHeight={"64px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/coinjoss_com/images/logoOfMinistryOfCommunicationAndInformationTechnologyOfTheRepublicOfIndonesiasvgpng.png",
                            fullWidth: 2060,
                            fullHeight: 2052,
                            aspectRatio: undefined
                          }}
                        />

                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__eswhG
                          )}
                          component={Link}
                          href={
                            "http://asm.pqalindonesia.com/?i=page.result&keyword=qms%2F2209167&company=PT.+Coinjoss+Data+Utama" as const
                          }
                          platform={"nextjs"}
                          target={"_blank" as const}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__mQ9BS)}
                            displayHeight={"64px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/coinjoss_com/images/iso9001Jpg.jpeg",
                              fullWidth: 1280,
                              fullHeight: 811,
                              aspectRatio: undefined
                            }}
                          />
                        </p.PlasmicLink>

                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link___9KlPb
                          )}
                          component={Link}
                          href={
                            "http://asm.pqalindonesia.com/?i=page.result&keyword=isms%2F2209167&company=PT.+Coinjoss+Data+Utama" as const
                          }
                          platform={"nextjs"}
                          target={"_blank" as const}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__aJsln)}
                            displayHeight={"64px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/coinjoss_com/images/iso20071Jpg.jpeg",
                              fullWidth: 1280,
                              fullHeight: 811,
                              aspectRatio: undefined
                            }}
                          />
                        </p.PlasmicLink>
                      </p.Stack>
                    ) : null}
                  </p.Stack>
                </p.Stack>

                <div className={classNames(projectcss.all, sty.column__mihJm)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__brdS8)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/heroCoinjosspng.png",
                      fullWidth: 1080,
                      fullHeight: 1080,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </p.Stack>
            </div>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"exchange"}
            data-plasmic-override={overrides.exchange}
            hasGap={true}
            className={classNames(projectcss.all, sty.exchange)}
            id={"services" as const}
          >
            <div className={classNames(projectcss.all, sty.freeBox__jDaLa)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__bheFj
                )}
              >
                {"Our Services"}
              </h1>
            </div>

            <div
              data-plasmic-name={"row2"}
              data-plasmic-override={overrides.row2}
              className={classNames(projectcss.all, sty.row2)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__yx4B1)}
              >
                <div className={classNames(projectcss.all, sty.column__oS7Oh)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wSuj)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("50%" as const)
                        : ("75%" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/exhcangequickpng.png",
                      fullWidth: 1080,
                      fullHeight: 1080,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___06Yeo)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__xDpXy
                    )}
                  >
                    {"Quick Exchange"}
                  </h1>

                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__exs6P
                    )}
                  >
                    {
                      "Exchange your cryptocurrencies easily with the best rate on the market."
                    }
                  </p>

                  <Button
                    className={classNames("__wab_instance", sty.button__hejp3)}
                    color={"blue" as const}
                    startIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__ybBk5)}
                        role={"img"}
                      />
                    }
                  >
                    {"Learn More"}
                  </Button>
                </p.Stack>
              </p.Stack>
            </div>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"staking"}
            data-plasmic-override={overrides.staking}
            hasGap={true}
            className={classNames(projectcss.all, sty.staking)}
          >
            <div
              data-plasmic-name={"row3"}
              data-plasmic-override={overrides.row3}
              className={classNames(projectcss.all, sty.row3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__aOwuF)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__b5VmY)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__mUpKf
                    )}
                  >
                    {"Staking"}
                  </h1>

                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p___3Cpji
                    )}
                  >
                    {
                      "Generate cash flow with crypto up to 30% possible, without the complexity and protected by insurance up to $5,000,000*"
                    }
                  </p>

                  <Button
                    className={classNames("__wab_instance", sty.button__slcGq)}
                    color={"blue" as const}
                    startIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__rbUJg)}
                        role={"img"}
                      />
                    }
                  >
                    {"Learn More"}
                  </Button>
                </p.Stack>

                <div className={classNames(projectcss.all, sty.column___3JzpE)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___85Pp7)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("50%" as const)
                        : ("75%" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/stakingpng.png",
                      fullWidth: 1080,
                      fullHeight: 1080,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </p.Stack>
            </div>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"custodian"}
            data-plasmic-override={overrides.custodian}
            hasGap={true}
            className={classNames(projectcss.all, sty.custodian)}
          >
            <div
              data-plasmic-name={"row4"}
              data-plasmic-override={overrides.row4}
              className={classNames(projectcss.all, sty.row4)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__p54Yz)}
              >
                <div className={classNames(projectcss.all, sty.column__otU1E)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__b9Oiv)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("50%" as const)
                        : ("75%" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/custodijosspng.png",
                      fullWidth: 1080,
                      fullHeight: 1080,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__glBJo)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__nyPx
                    )}
                  >
                    {"Decentralized Exchange"}
                  </h1>

                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__tgtop
                    )}
                  >
                    {
                      "Swap, Earn and Repeat, maximizing to increase your value."
                    }
                  </p>

                  <Button
                    className={classNames("__wab_instance", sty.button__cBNr)}
                    color={"blue" as const}
                    startIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__l8X1I)}
                        role={"img"}
                      />
                    }
                  >
                    {"Learn More"}
                  </Button>
                </p.Stack>
              </p.Stack>
            </div>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"cta"}
            data-plasmic-override={overrides.cta}
            hasGap={true}
            className={classNames(projectcss.all, sty.cta)}
          >
            <div
              data-plasmic-name={"row6"}
              data-plasmic-override={overrides.row6}
              className={classNames(projectcss.all, sty.row6)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oBmxQ)}
              >
                <h3
                  data-plasmic-name={"h3"}
                  data-plasmic-override={overrides.h3}
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3
                  )}
                >
                  {
                    "Take part in redefining digital assets ownership and exchange, through our state-of-the-art ecosystem"
                  }
                </h3>

                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___4WrSk
                  )}
                  component={Link}
                  href={"https://platform.coinjoss.com/register" as const}
                  platform={"nextjs"}
                >
                  <Button
                    className={classNames("__wab_instance", sty.button__opsae)}
                    color={"white" as const}
                  >
                    {"Register Now"}
                  </Button>
                </p.PlasmicLink>
              </p.Stack>
            </div>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"partner"}
            data-plasmic-override={overrides.partner}
            hasGap={true}
            className={classNames(projectcss.all, sty.partner)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__n5OYk)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1___1DGaE
                )}
              >
                {"Payment Services Provided by"}
              </h1>
            </div>

            <div
              data-plasmic-name={"row5"}
              data-plasmic-override={overrides.row5}
              className={classNames(projectcss.all, sty.row5)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___9I1Vk)}>
                <div className={classNames(projectcss.all, sty.freeBox__nTkFp)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__feXo1)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("72px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/cybavopng.png",
                      fullWidth: 374,
                      fullHeight: 160,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__jSeNo)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__yT9Vg)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("72px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/xenditpng.png",
                      fullWidth: 219,
                      fullHeight: 74,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__gfQ)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__nkGqc)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("24px" as const)
                        : ("72px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/bcapng.png",
                      fullWidth: 171,
                      fullHeight: 54,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div
                  className={classNames(projectcss.all, sty.freeBox___8NbYf)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__kNq0I)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("72px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/mandiripng.png",
                      fullWidth: 184,
                      fullHeight: 57,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__jomck)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__huqww)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("32px" as const)
                        : ("72px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/gnosispng.png",
                      fullWidth: 348,
                      fullHeight: 145,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__aR4TU)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___4YcJ0)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("42px" as const)
                        : ("92px" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/locktonpng.png",
                      fullWidth: 3000,
                      fullHeight: 2000,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </p.Stack>

          <p.Stack
            as={"section"}
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            hasGap={true}
            className={classNames(projectcss.all, sty.footer)}
          >
            <div
              data-plasmic-name={"row7"}
              data-plasmic-override={overrides.row7}
              className={classNames(projectcss.all, sty.row7)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__nZurg)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___2B2Ig)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wbF9A)}
                    displayHeight={"32px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/coinjoss_com/images/logo1Coinjosspng.png",
                      fullWidth: 1095,
                      fullHeight: 174,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Gmi
                    )}
                  >
                    {
                      "Jl. Danau Tamblingan No.160, Sanur, Denpasar,\nBali 80228"
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___3C5Kl)}
                >
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__fhxpB
                    )}
                    component={Link}
                    href={"https://blog.coinjoss.com/" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xx5Na
                      )}
                    >
                      {"Blog"}
                    </div>
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__kLstT
                    )}
                    component={Link}
                    href={"https://platform.coinjoss.com/login" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nPuXi
                      )}
                    >
                      {"Quick Exchange"}
                    </div>
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___6It1I
                    )}
                    component={Link}
                    href={"https://platform.coinjoss.com/login" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vLaXy
                      )}
                    >
                      {"Staking"}
                    </div>
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___3Typa
                    )}
                    component={Link}
                    href={"https://platform.coinjoss.com/login" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kN1N
                      )}
                    >
                      {"Decentralized Exchange"}
                    </div>
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__lTr7K
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vKMgK
                      )}
                    >
                      {"Josscare"}
                    </div>
                  </p.PlasmicLink>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___9LkZg)}
                >
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__b3Uko
                    )}
                    component={Link}
                    href={"https://coinjoss.com/term-and-conditions" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wlReT
                      )}
                    >
                      {"Terms of Service"}
                    </div>
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__e9ATu
                    )}
                    component={Link}
                    href={"https://coinjoss.com/privacy-policy" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zjy1H
                      )}
                    >
                      {"Privacy Policy"}
                    </div>
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__d6IBw
                    )}
                    component={Link}
                    href={"https://coinjoss.com/faq" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fhmRy
                      )}
                    >
                      {"FAQ"}
                    </div>
                  </p.PlasmicLink>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__bRgNm)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sq48G)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qYjd
                      )}
                    >
                      {"Our Social Media"}
                    </div>
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"socmedWrapper"}
                    data-plasmic-override={overrides.socmedWrapper}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.socmedWrapper)}
                  >
                    <p.PlasmicLink
                      data-plasmic-name={"socmed"}
                      data-plasmic-override={overrides.socmed}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.socmed
                      )}
                      component={Link}
                      href={
                        "https://www.facebook.com/coinjossofficial" as const
                      }
                      platform={"nextjs"}
                    >
                      <FacebookSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__nfgN)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      data-plasmic-name={"socmed2"}
                      data-plasmic-override={overrides.socmed2}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.socmed2
                      )}
                      component={Link}
                      href={
                        "https://www.instagram.com/coinjossofficial/" as const
                      }
                      platform={"nextjs"}
                    >
                      <InstagramSvgrepoCom1SvgIcon
                        className={classNames(projectcss.all, sty.svg__kn5Tz)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      data-plasmic-name={"socmed3"}
                      data-plasmic-override={overrides.socmed3}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.socmed3
                      )}
                      component={Link}
                      href={"https://twitter.com/coinjoss" as const}
                      platform={"nextjs"}
                    >
                      <TwitterSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__o97I)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      data-plasmic-name={"socmed4"}
                      data-plasmic-override={overrides.socmed4}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.socmed4
                      )}
                      component={Link}
                      href={"https://medium.com/coinjoss" as const}
                      platform={"nextjs"}
                    >
                      <MediumCircleSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__hk4Ul)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      data-plasmic-name={"socmed5"}
                      data-plasmic-override={overrides.socmed5}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.socmed5
                      )}
                      component={Link}
                      href={
                        "https://www.linkedin.com/company/coinjoss/" as const
                      }
                      platform={"nextjs"}
                    >
                      <LinkedinSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__sIr7E)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      data-plasmic-name={"socmed6"}
                      data-plasmic-override={overrides.socmed6}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.socmed6
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <DiscordSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__pq087)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      data-plasmic-name={"socmed7"}
                      data-plasmic-override={overrides.socmed7}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.socmed7
                      )}
                      component={Link}
                      href={"https://t.me/CoinjossChannel" as const}
                      platform={"nextjs"}
                    >
                      <TelegramSvgrepoCom2SvgIcon
                        className={classNames(projectcss.all, sty.svg__o0UMm)}
                        role={"img"}
                      />
                    </p.PlasmicLink>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ggGt
              )}
            >
              {"© 2019 - 2022 Coinjoss.com. All rights reserved"}
            </div>
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "navigationBar",
    "hero",
    "row",
    "h6",
    "exchange",
    "row2",
    "staking",
    "row3",
    "custodian",
    "row4",
    "cta",
    "row6",
    "h3",
    "partner",
    "row5",
    "footer",
    "row7",
    "socmedWrapper",
    "socmed",
    "socmed2",
    "socmed3",
    "socmed4",
    "socmed5",
    "socmed6",
    "socmed7"
  ],
  navbar: ["navbar", "navigationBar"],
  navigationBar: ["navigationBar"],
  hero: ["hero", "row", "h6"],
  row: ["row", "h6"],
  h6: ["h6"],
  exchange: ["exchange", "row2"],
  row2: ["row2"],
  staking: ["staking", "row3"],
  row3: ["row3"],
  custodian: ["custodian", "row4"],
  row4: ["row4"],
  cta: ["cta", "row6", "h3"],
  row6: ["row6", "h3"],
  h3: ["h3"],
  partner: ["partner", "row5"],
  row5: ["row5"],
  footer: [
    "footer",
    "row7",
    "socmedWrapper",
    "socmed",
    "socmed2",
    "socmed3",
    "socmed4",
    "socmed5",
    "socmed6",
    "socmed7"
  ],
  row7: [
    "row7",
    "socmedWrapper",
    "socmed",
    "socmed2",
    "socmed3",
    "socmed4",
    "socmed5",
    "socmed6",
    "socmed7"
  ],
  socmedWrapper: [
    "socmedWrapper",
    "socmed",
    "socmed2",
    "socmed3",
    "socmed4",
    "socmed5",
    "socmed6",
    "socmed7"
  ],
  socmed: ["socmed"],
  socmed2: ["socmed2"],
  socmed3: ["socmed3"],
  socmed4: ["socmed4"],
  socmed5: ["socmed5"],
  socmed6: ["socmed6"],
  socmed7: ["socmed7"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: "div";
  navigationBar: typeof NavigationBar;
  hero: "section";
  row: "div";
  h6: "h6";
  exchange: "section";
  row2: "div";
  staking: "section";
  row3: "div";
  custodian: "section";
  row4: "div";
  cta: "section";
  row6: "div";
  h3: "h3";
  partner: "section";
  row5: "div";
  footer: "section";
  row7: "div";
  socmedWrapper: "div";
  socmed: "a";
  socmed2: "a";
  socmed3: "a";
  socmed4: "a";
  socmed5: "a";
  socmed6: "a";
  socmed7: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    navigationBar: makeNodeComponent("navigationBar"),
    hero: makeNodeComponent("hero"),
    row: makeNodeComponent("row"),
    h6: makeNodeComponent("h6"),
    exchange: makeNodeComponent("exchange"),
    row2: makeNodeComponent("row2"),
    staking: makeNodeComponent("staking"),
    row3: makeNodeComponent("row3"),
    custodian: makeNodeComponent("custodian"),
    row4: makeNodeComponent("row4"),
    cta: makeNodeComponent("cta"),
    row6: makeNodeComponent("row6"),
    h3: makeNodeComponent("h3"),
    partner: makeNodeComponent("partner"),
    row5: makeNodeComponent("row5"),
    footer: makeNodeComponent("footer"),
    row7: makeNodeComponent("row7"),
    socmedWrapper: makeNodeComponent("socmedWrapper"),
    socmed: makeNodeComponent("socmed"),
    socmed2: makeNodeComponent("socmed2"),
    socmed3: makeNodeComponent("socmed3"),
    socmed4: makeNodeComponent("socmed4"),
    socmed5: makeNodeComponent("socmed5"),
    socmed6: makeNodeComponent("socmed6"),
    socmed7: makeNodeComponent("socmed7"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
